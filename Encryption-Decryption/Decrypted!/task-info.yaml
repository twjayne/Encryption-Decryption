type: edu
custom_name: stage3
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new SimpleTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new SimpleTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new SimpleTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {

        private static final int NUM_ALPHABET = 26;
        private static final String letters = "abcdefghijklmnopqrstuvwxyz";

        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            String input = sc.nextLine();
            int shift = sc.nextInt();
            StringBuilder sb = new StringBuilder();
            for (char c : input.toCharArray()) {
                sb.append(shiftByKey(c, shift));
            }
            System.out.println(sb);
        }

        private static char shiftByKey(char c, int shift) {
            if (!Character.isAlphabetic(c)) return c;
            int finalIndex = (letters.indexOf(c) + shift) % 26;
            return letters.charAt(finalIndex);
        }

        private static char convertToOppositeAlphabetOrder(char c) {
            if (!Character.isAlphabetic(c)) return c;
            int inputIndex = letters.indexOf(c);
            int outputIndex = NUM_ALPHABET - 1 - inputIndex;
            return letters.charAt(outputIndex);
        }


    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Solved
record: 3
