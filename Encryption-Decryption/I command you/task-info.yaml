type: edu
custom_name: stage4
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {

        private static final int NUM_ALPHABET = 26;
        private static final String letters = "abcdefghijklmnopqrstuvwxyz";

        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            String mode = sc.nextLine();
            boolean isEncryption = mode.equals("enc");
            String input = sc.nextLine();
            int shift = sc.nextInt();
            StringBuilder sb = new StringBuilder();
            for (char c : input.toCharArray()) {
                char output = (char) (isEncryption ? encryptionByShift(c, shift) : decryptionByShift(c, shift));
                sb.append(output);
            }
            System.out.println(sb);
        }

        private static int encryptionByShift(char c, int shift) {
            return (int) c + shift;
        }

        private static int decryptionByShift(char c, int shift) {
            return (int) c - shift;
        }

        private static char convertToOppositeAlphabetOrder(char c) {
            if (!Character.isAlphabetic(c)) return c;
            int inputIndex = letters.indexOf(c);
            int outputIndex = NUM_ALPHABET - 1 - inputIndex;
            return letters.charAt(outputIndex);
        }


    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/248/implement
status: Solved
record: 4
